@using SSOApp.Service
@using SSOApp.Extensions

<!DOCTYPE html>
<html class="full" lang="en">
    <head>
        <meta charset="utf-8" />
        <title>@ViewBag.Title - Single Sign On Demonstration</title>
        <link href="~/favicon.ico" rel="shortcut icon" type="image/x-icon" />
        <meta name="viewport" content="width=device-width" />
        <meta name="description" content="Description of Single Sign On techniques">
        <meta name="author" content="Peter Sbarski">
        @Styles.Render("~/Content/css")
        @Scripts.Render("~/bundles/modernizr")
        @Scripts.Render("~/bundles/easyXDM")

    </head>
    <body>
        <nav class="navbar navbar-fixed-bottom navbar-inverse" role="navigation">
            <div class="container">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-ex1-collapse">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                </div>

                <!-- Collect the nav links, forms, and other content for toggling -->
                <div class="collapse navbar-collapse navbar-ex1-collapse">
                    <ul class="nav navbar-nav">
                        <li><a href="/Home/Index">Home</a></li>
                        <li><a href="/Home/Cookies">3rd Party Cookie</a></li>
                        <li><a href="/Home/HTML5">HTML5 LocalStorage + easyXDM</a></li>
                        <li><a href="/Home/CAS">Central Authentication Server</a></li>
                    </ul>
                    <ul class="nav navbar-nav pull-right">
                        @Html.Partial("_LoginPartial")
                    </ul>
                </div><!-- /.navbar-collapse -->
            </div><!-- /.container -->
        </nav>



        <div class="container">
            <div id="body">
                @if (User.Identity.IsAuthenticated)
                {
                    <div class="bs-callout bs-callout-warning">
                        <h4>You are logged in as: <a href="/Account/Manage">@User.Identity.Name</a> </h4>
                    </div>
                }
                @if (Html.IsAuthProvider())
                {
                        <div class="bs-callout bs-callout-warning">
                            <h4>This is the Central Authentication Server</h4>
                        </div>
                }
                @RenderSection("featured", required: false)
                <section class="content-wrapper main-content clear-fix">
                    @RenderBody()
                </section>
            </div>
        </div>

        <!-- Approach 1 -->

        @if (TempData["sso-logout"] != null)
        {
            <img src="@Html.OtherSiteUrl()/Cookie/LogOff?token=@SSOAuthenticationService.EncryptToken(User.Identity.Name)" />
            
            <script type="text/javascript">
                    var socket = new easyXDM.Socket({
                        remote: "@Html.AuthProviderSite()/XDM/ClearAuth",
                        onReady: function () {
                        }
                    });
                debugger;
                    socket.postMessage("remove");
                </script>
            
            TempData.Remove("sso-logout");
        }
        
        @if (User.Identity.IsAuthenticated && TempData["sso"] != null && (bool)TempData["sso"]) //the client performs a request to the other site to capture their authentication cookie
        {
            <img src="@Html.OtherSiteUrl()/Cookie/Login?token=@SSOAuthenticationService.EncryptToken(User.Identity.Name)" />
            
            TempData.Remove("sso");
        }
        else
        { 
            if (User.Identity.IsAuthenticated && TempData["sso-auth"] != null) //talk to the auth site via an iframe
            {
                TempData.Remove("sso-auth");
            
                <script type="text/javascript">
                    var socket = new easyXDM.Socket({
                        remote: "@Html.AuthProviderSite()/XDM/SaveAuth",
                        onReady: function () {
                        }
                    });

                    socket.postMessage("@SSOAuthenticationService.EncryptToken(User.Identity.Name)");
                </script>
            }
        
            if (!User.Identity.IsAuthenticated) 
            {
                <script type="text/javascript">
                    var socket = new easyXDM.Socket({
                        remote: "@Html.AuthProviderSite()/XDM/GetAuth",
                        onMessage: function (msg, origin) {
                            if (msg != null && msg != "null" && msg.length > 0) {
                                var url = '/XDM/Login?token=' + msg;
                                
                                $.ajax({
                                    type: "POST",
                                    url: url,
                                    success: function () {
                                        location.reload();
                                    }
                                });
                            }
                        },
                        onReady: function () {
                        }
                    });

                    socket.postMessage("Get Auth");
                </script>
            }
        }

        @Scripts.Render("~/bundles/jquery")
        @RenderSection("scripts", required: false)
    </body>
</html>
